<?xml version="1.0"?>
<configuration>

  <configSections>
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere" />
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="servercomponents" type="Autofac.Configuration.SectionHandler, Autofac.Configuration" />
    <section name="rewriter" requirePermission="false" type="Intelligencia.UrlRewriter.Configuration.RewriterConfigurationSectionHandler, Intelligencia.UrlRewriter" />
  </configSections>

  <runtime>
    <assemblyBinding appliesTo="v2.0.50727" xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
      <probing privatePath="Common\Core"/>
    </assemblyBinding>
  </runtime>

  <appSettings>
  </appSettings>

  <connectionStrings />

  <system.web>
    <compilation debug="true">

      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>

    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Windows" />
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

            <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
              <error statusCode="403" redirect="NoAccess.htm" />
              <error statusCode="404" redirect="FileNotFound.htm" />
            </customErrors>
    -->
    <customErrors mode="Off"/>

    <pages theme="BasicTheme">
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </controls>
    </pages>

    <globalization culture="de-AT" uiCulture="en-US" />

  </system.web>

  <!-- Rewrite URLs to use the custom HTTP Facade -->
  <rewriter>
    <rewrite url="^(.*)/Bootstrapper.svc/([^/]+)$" to="$1/Bootstrapper.facade?action=$2" />
    <rewrite url="^(.*)/Bootstrapper.svc/([^/]+)/(.+)" to="$1/Bootstrapper.facade?action=$2&amp;path=$3" />
  </rewriter>

  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4"
                type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>

  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <remove name="ScriptModule" />
      <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="UrlRewriter" type="Intelligencia.UrlRewriter.RewriterHttpModule, Intelligencia.UrlRewriter" />
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated"/>
      <remove name="ScriptHandlerFactory" />
      <remove name="ScriptHandlerFactoryAppServices" />
      <remove name="ScriptResource" />
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode"
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode"
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />

      <!-- various Kistl handlers -->
      <add name="KistlServiceFacade" verb="GET,POST" path="KistlService.facade" type="Kistl.Server.HttpService.KistlServiceFacade" resourceType="Unspecified" />
      <add name="BootstrapperFacade" verb="GET,POST" path="Bootstrapper.facade" type="Kistl.Server.HttpService.BootstrapperFacade" resourceType="Unspecified" />
      <add name="PerfMonFacade" verb="GET" path="PerfMon.facade" type="Kistl.Server.HttpService.PerfMonFacade" resourceType="Unspecified" />
    </handlers>
  </system.webServer>

  <system.serviceModel>
    <!-- Binding -->
    <bindings>
      <basicHttpBinding>
        <binding name="KistlService_Binding">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Basic">
              <extendedProtectionPolicy policyEnforcement="Never" />
            </transport>
          </security>
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="Bootstrapper_Binding">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Basic">
              <extendedProtectionPolicy policyEnforcement="Never" />
            </transport>
          </security>
        </binding>
      </webHttpBinding>
    </bindings>
    <!-- Server -->
    <behaviors>
      <serviceBehaviors>
        <behavior name="KistlService_Behaviour">
          <serviceMetadata httpGetEnabled="true" />
          <!--
            To receive exception details in faults for debugging purposes, set the value below to true.
            Set to false before deployment to avoid disclosing exception information.
            Hint from http://geekswithblogs.net/frankw/archive/2008/03/12/includeexceptiondetailinfaults-in-wcf-service-configuration.aspx
          -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!--
            We are using sessions! Not realy sessions like ASP.NET sessions, we do not have state at the server. 
            But the configurated security mode establishes a session. Thus we have to increse the maxConcurrentSessions throttle.
            200 because WCF 4.0 uses 100 * processor count for session and 16 * processor count for calls
          -->
          <serviceThrottling maxConcurrentSessions="200" />
        </behavior>
        <behavior name="Kistl.Server.BootstrapperServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="KistlService_Behaviour" name="Kistl.Server.KistlService">
        <endpoint address="KistlService.svc"
          binding="basicHttpBinding" bindingConfiguration="KistlService_Binding"
          name="basicHttpEndpoint" contract="Kistl.API.IKistlService" />
     </service>
      <service behaviorConfiguration="Kistl.Server.BootstrapperServiceBehavior"
        name="Kistl.Server.BootstrapperService">
        <endpoint address="Bootstrapper.svc"
          binding="webHttpBinding" bindingConfiguration="Bootstrapper_Binding"
          name="webEndpoint" contract="Kistl.Server.IBootstrapperService" />
      </service>
    </services>
    <serviceHostingEnvironment>
      <baseAddressPrefixFilters>
        <!-- only allow hosting the service on the short name -->
        <!-- this avoids a "This collection already contains an address with scheme http.  There can be at most one address per scheme in this collection." exception -->
        <!-- see http://stackoverflow.com/a/561975/4918 for details -->
        <add prefix="http://srv2008"/>
      </baseAddressPrefixFilters>
    </serviceHostingEnvironment>
  </system.serviceModel>

  <log4net>
    <appender name="TraceAppender" type="log4net.Appender.TraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="[%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\Kistl.Server.Service.log" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="1MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <appender name="FilteredSchemaReport" type="log4net.Appender.ForwardingAppender">
      <threshold value="DEBUG" />
      <appender-ref ref="TraceAppender" />
      <appender-ref ref="RollingLogFileAppender" />
    </appender>
    <appender name="SchemaReport" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\SchemaReport.log" />
      <appendToFile value="true" />
      <rollingStyle value="Composite" />
      <maxSizeRollBackups value="7" />
      <maximumFileSize value="1MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level| %property{INDENT}%message%newline" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="TraceAppender" />
      <appender-ref ref="RollingLogFileAppender" />
    </root>
    <!-- quiet down very verbose info logging -->
    <logger name="Kistl.Facade">
      <level value="INFO" />
    </logger>
    <logger name="Kistl.Linq">
      <level value="WARN" />
    </logger>
    <logger name="Kistl.Linq.Query">
      <level value="WARN" />
    </logger>
    <logger name="Kistl.Server.Generator.Host">
      <level value="WARN" />
    </logger>
    <logger name="Kistl.Reflection">
      <level value="WARN" />
    </logger>
    <logger name="Kistl.Server.Schema">
      <!-- hack around to filter DEBUG messages to the report ONLY-->
      <additivity value="false" />
      <level value="INFO" />
      <!-- Create separate schema report with all information -->
      <appender-ref ref="SchemaReport" />
      <!-- filter INFO and HIGHER messages into logfile and console -->
      <appender-ref ref="FilteredSchemaReport" />
    </logger>
    <!-- configure the components you want to debug here -->
    <!-- 
    <logger name="Kistl.Server.Generator.Templates">
      <level value="DEBUG" />
    </logger>
    -->
    <logger name="NHibernate">
      <level value="INFO" />
      <!-- "WARN" recommended for production -->
    </logger>
    <logger name="NHibernate.SQL">
      <level value="DEBUG" />
    </logger>
  </log4net>

  <!--
  See http://code.google.com/p/autofac/wiki/XmlConfiguration for syntax
  See ServerModule and StoreProvider for overridable things.
  -->
  <servercomponents />
  <!-- See http://npgsql.projects.postgresql.org/docs/manual/UserManual.html "Using Npgsql with ProviderFactory" -->
  <system.data>
    <DbProviderFactories>
      <add name="Npgsql Data Provider"
           invariant="Npgsql"
           support="FF"
           description=".Net Framework Data Provider for Postgresql Server"
           type="Npgsql.NpgsqlFactory, Npgsql, Version=2.0.11.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7" />
    </DbProviderFactories>
  </system.data>

</configuration>
